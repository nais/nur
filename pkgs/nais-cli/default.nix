# This file was generated by nais/cli. DO NOT EDIT.
# vim: set ft=nix ts=2 sw=2 sts=2 et sta
{
  system ? builtins.currentSystem,
  lib,
  fetchurl,
  installShellFiles,
  stdenvNoCC,
}: let
  shaMap = {
    x86_64-linux = "0r1am5fj06h5ins7552bawvcma11464dxv9v78jwcqkgzh4jd5l3";
    aarch64-linux = "1nrrlq7vmbp3fwzx6j9gcqlgrg7bmym1dprjp5dc2y7abwiqwyvx";
    x86_64-darwin = "049kdazsdzx58s7g5y456941gyxif0l7rca3c1dilsldyhnw2a6z";
    aarch64-darwin = "19y3myfn0838dcyy83i428yaii31l93pf27dzpzggdvq8azwarbp";
  };

  urlMap = {
    x86_64-linux = "https://github.com/nais/cli/releases/download/v2.0.2/nais-cli_v2.0.2_linux_amd64.tar.gz";
    aarch64-linux = "https://github.com/nais/cli/releases/download/v2.0.2/nais-cli_v2.0.2_linux_arm64.tar.gz";
    x86_64-darwin = "https://github.com/nais/cli/releases/download/v2.0.2/nais-cli_v2.0.2_darwin_amd64.tar.gz";
    aarch64-darwin = "https://github.com/nais/cli/releases/download/v2.0.2/nais-cli_v2.0.2_darwin_arm64.tar.gz";
  };
in
  stdenvNoCC.mkDerivation {
    pname = "nais-cli";
    version = "v2.0.2";
    src = fetchurl {
      url = urlMap.${system};
      sha256 = shaMap.${system};
    };

    sourceRoot = ".";

    nativeBuildInputs = [installShellFiles];

    installPhase = ''
      mkdir -p $out/bin
      cp -vr ./nais $out/bin/nais
    '';
    postInstall = ''
      installShellCompletion ./completions/*
    '';

    system = system;

    meta = {
      sourceProvenance = [lib.sourceTypes.binaryNativeCode];

      platforms = [
        "aarch64-darwin"
        "aarch64-linux"
        "x86_64-darwin"
        "x86_64-linux"
      ];
    };
  }
