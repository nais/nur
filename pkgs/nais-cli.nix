# This file was generated by nais/cli. DO NOT EDIT.
# vim: set ft=nix ts=2 sw=2 sts=2 et sta
{
  system ? builtins.currentSystem,
  lib,
  fetchurl,
  installShellFiles,
  stdenvNoCC,
}: let
  shaMap = {
    x86_64-linux = "C8FB6CCB708944B27BE4F0267EC10E4AFE0B6C8F7C59AA1FA519D24C8AC8A3BB";
    aarch64-linux = "01C78C43BB9BF14F42EEBA7BE8F08B16A56CACD51720D2912DF9CBE71611FE81";
    x86_64-darwin = "C58B77E6059AA8A26075CF154DA736EAFF1272766F88C631237F20162CCE8AC9";
    aarch64-darwin = "41CF1E865A906B21A361F8D64EECBE8B5DA8C442FDD66160861FC8A806A7FEBE";
  };

  urlMap = {
    x86_64-linux = "https://github.com/nais/cli/releases/download/v3.8.0/nais-cli_linux_amd64.tgz";
    aarch64-linux = "https://github.com/nais/cli/releases/download/v3.8.0/nais-cli_linux_arm64.tgz";
    x86_64-darwin = "https://github.com/nais/cli/releases/download/v3.8.0/nais-cli_darwin_amd64.tgz";
    aarch64-darwin = "https://github.com/nais/cli/releases/download/v3.8.0/nais-cli_darwin_arm64.tgz";
  };
in
  stdenvNoCC.mkDerivation {
    pname = "nais-cli";
    version = "v3.8.0";
    src = fetchurl {
      url = urlMap.${system};
      sha256 = shaMap.${system};
    };

    sourceRoot = ".";

    nativeBuildInputs = [installShellFiles];

    installPhase = ''
      mkdir -p $out/bin
      cp -vr ./nais $out/bin/nais
    '';
    postInstall = ''
      installShellCompletion ./completions/*
    '';

    system = system;

    meta = {
      sourceProvenance = [lib.sourceTypes.binaryNativeCode];

      platforms = [
        "aarch64-darwin"
        "aarch64-linux"
        "x86_64-darwin"
        "x86_64-linux"
      ];
    };
  }
