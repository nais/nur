# This file was generated by nais/cli. DO NOT EDIT.
# vim: set ft=nix ts=2 sw=2 sts=2 et sta
{
  system ? builtins.currentSystem,
  lib,
  fetchurl,
  installShellFiles,
  stdenvNoCC,
}: let
  shaMap = {
    x86_64-linux = "30B8F2CA0BFAF4D5CAC6936B3E0827ACE3B0E798A5C7516E1BEF1DDE99B24D1D";
    aarch64-linux = "87338D2DA70018312E4CFF872FA3F9644607D57972639BAEC576AA773F574DFD";
    x86_64-darwin = "A2E1F68363247622CFB36923226A66852BA20D5F33430827FAD1C3E9FCF53AE2";
    aarch64-darwin = "98BEB321522011A0F8E50C69D5472D8763B3822BD92CDD0C0D21C6D12F96AE5A";
  };

  urlMap = {
    x86_64-linux = "https://github.com/nais/cli/releases/download/v3.8.2/nais-cli_linux_amd64.tgz";
    aarch64-linux = "https://github.com/nais/cli/releases/download/v3.8.2/nais-cli_linux_arm64.tgz";
    x86_64-darwin = "https://github.com/nais/cli/releases/download/v3.8.2/nais-cli_darwin_amd64.tgz";
    aarch64-darwin = "https://github.com/nais/cli/releases/download/v3.8.2/nais-cli_darwin_arm64.tgz";
  };
in
  stdenvNoCC.mkDerivation {
    pname = "nais-cli";
    version = "v3.8.2";
    src = fetchurl {
      url = urlMap.${system};
      sha256 = shaMap.${system};
    };

    sourceRoot = ".";

    nativeBuildInputs = [installShellFiles];

    installPhase = ''
      mkdir -p $out/bin
      cp -vr ./nais $out/bin/nais
    '';
    postInstall = ''
      installShellCompletion ./completions/*
    '';

    system = system;

    meta = {
      sourceProvenance = [lib.sourceTypes.binaryNativeCode];

      platforms = [
        "aarch64-darwin"
        "aarch64-linux"
        "x86_64-darwin"
        "x86_64-linux"
      ];
    };
  }
