# This file was generated by nais/cli. DO NOT EDIT.
# vim: set ft=nix ts=2 sw=2 sts=2 et sta
{
  system ? builtins.currentSystem,
  lib,
  fetchurl,
  installShellFiles,
  stdenvNoCC,
}: let
  shaMap = {
    x86_64-linux = "2B4DAEAF954CF40DCC1EFD8AF615939C007F6BBD955EC6948EA9E471A1B7B3A1";
    aarch64-linux = "D3A47AEB56402CB4CB4E78207E8EB1AC66E35EE1A02CA61D0F46B8FFB23D1E93";
    x86_64-darwin = "099BFA7340085AF4FED26FEBBD535B77FA7CFD2050350A772D6DFDEAE0D3369C";
    aarch64-darwin = "C688D6CAA13834ED7902E9BF0DBC8DBC6ED40B0A820EA68BA98ECD48EFE85AA4";
  };

  urlMap = {
    x86_64-linux = "https://github.com/nais/cli/releases/download/v3.9.0/nais-cli_linux_amd64.tgz";
    aarch64-linux = "https://github.com/nais/cli/releases/download/v3.9.0/nais-cli_linux_arm64.tgz";
    x86_64-darwin = "https://github.com/nais/cli/releases/download/v3.9.0/nais-cli_darwin_amd64.tgz";
    aarch64-darwin = "https://github.com/nais/cli/releases/download/v3.9.0/nais-cli_darwin_arm64.tgz";
  };
in
  stdenvNoCC.mkDerivation {
    pname = "nais-cli";
    version = "v3.9.0";
    src = fetchurl {
      url = urlMap.${system};
      sha256 = shaMap.${system};
    };

    sourceRoot = ".";

    nativeBuildInputs = [installShellFiles];

    installPhase = ''
      mkdir -p $out/bin
      cp -vr ./nais $out/bin/nais
    '';
    postInstall = ''
      installShellCompletion ./completions/*
    '';

    system = system;

    meta = {
      sourceProvenance = [lib.sourceTypes.binaryNativeCode];

      platforms = [
        "aarch64-darwin"
        "aarch64-linux"
        "x86_64-darwin"
        "x86_64-linux"
      ];
    };
  }
