# This file was generated by nais/cli. DO NOT EDIT.
# vim: set ft=nix ts=2 sw=2 sts=2 et sta
{
  system ? builtins.currentSystem,
  lib,
  fetchurl,
  installShellFiles,
  stdenvNoCC,
}: let
  shaMap = {
    x86_64-linux = "B96A4C51EE47103F62905C1D80923ED6062B2BA3B5376428A240CE913C316816";
    aarch64-linux = "FFCBCC2DB52D762988B674AA5B61EEB5E73E0962E6FF2201FE58E820A1BF230C";
    x86_64-darwin = "6A0CDEB4167D441CCB90C25719B60054206C809BA01E3478C48DEDBE83EAF5E2";
    aarch64-darwin = "A416D8DC29C62691F5C4060CD56B4DBB3883848E3C9C3A9440E3D2037E7BB480";
  };

  urlMap = {
    x86_64-linux = "https://github.com/nais/cli/releases/download/v3.4.0/nais-cli_linux_amd64.tgz";
    aarch64-linux = "https://github.com/nais/cli/releases/download/v3.4.0/nais-cli_linux_arm64.tgz";
    x86_64-darwin = "https://github.com/nais/cli/releases/download/v3.4.0/nais-cli_darwin_amd64.tgz";
    aarch64-darwin = "https://github.com/nais/cli/releases/download/v3.4.0/nais-cli_darwin_arm64.tgz";
  };
in
  stdenvNoCC.mkDerivation {
    pname = "nais-cli";
    version = "v3.4.0";
    src = fetchurl {
      url = urlMap.${system};
      sha256 = shaMap.${system};
    };

    sourceRoot = ".";

    nativeBuildInputs = [installShellFiles];

    installPhase = ''
      mkdir -p $out/bin
      cp -vr ./nais $out/bin/nais
    '';
    postInstall = ''
      installShellCompletion ./completions/*
    '';

    system = system;

    meta = {
      sourceProvenance = [lib.sourceTypes.binaryNativeCode];

      platforms = [
        "aarch64-darwin"
        "aarch64-linux"
        "x86_64-darwin"
        "x86_64-linux"
      ];
    };
  }
