# This file was generated by nais/cli. DO NOT EDIT.
# vim: set ft=nix ts=2 sw=2 sts=2 et sta
{
  system ? builtins.currentSystem,
  lib,
  fetchurl,
  installShellFiles,
  stdenvNoCC,
}: let
  shaMap = {
    x86_64-linux = "9C23D11743FFB7C4FAC36064EAF9717A7D808EBF1FE83D6AB75FA0938A3FE2FB";
    aarch64-linux = "02BE0B5C32514DA4B0891DBF0A3B3AAF763324A646EDB0576C363DE6CAC2F8F0";
    x86_64-darwin = "04C113456D5BDE23BA9A2A57578B8195CC605C3914C472F475DCAEB1C16E7076";
    aarch64-darwin = "0A07E56EE799570FF43C49805933AE0506792AD75F39A39C01D015EDFFE8AC8A";
  };

  urlMap = {
    x86_64-linux = "https://github.com/nais/cli/releases/download/v3.10.0/nais-cli_linux_amd64.tgz";
    aarch64-linux = "https://github.com/nais/cli/releases/download/v3.10.0/nais-cli_linux_arm64.tgz";
    x86_64-darwin = "https://github.com/nais/cli/releases/download/v3.10.0/nais-cli_darwin_amd64.tgz";
    aarch64-darwin = "https://github.com/nais/cli/releases/download/v3.10.0/nais-cli_darwin_arm64.tgz";
  };
in
  stdenvNoCC.mkDerivation {
    pname = "nais-cli";
    version = "v3.10.0";
    src = fetchurl {
      url = urlMap.${system};
      sha256 = shaMap.${system};
    };

    sourceRoot = ".";

    nativeBuildInputs = [installShellFiles];

    installPhase = ''
      mkdir -p $out/bin
      cp -vr ./nais $out/bin/nais
    '';
    postInstall = ''
      installShellCompletion ./completions/*
    '';

    system = system;

    meta = {
      sourceProvenance = [lib.sourceTypes.binaryNativeCode];

      platforms = [
        "aarch64-darwin"
        "aarch64-linux"
        "x86_64-darwin"
        "x86_64-linux"
      ];
    };
  }
