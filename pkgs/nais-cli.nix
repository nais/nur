# This file was generated by nais/cli. DO NOT EDIT.
# vim: set ft=nix ts=2 sw=2 sts=2 et sta
{
  system ? builtins.currentSystem,
  lib,
  fetchurl,
  installShellFiles,
  stdenvNoCC,
}: let
  shaMap = {
    x86_64-linux = "7F50F2323FA7152D9CB03A5422A85F71EB968F6413D715ABB338C9C2C73DB8CA";
    aarch64-linux = "E5610AB79CB59A28350CA8B89199D6D3FB8220AFE10A2E938A5CF9B5B540EAEA";
    x86_64-darwin = "A0389CD85B0C8487CC1B3EA045EC978A38DF7E8259AF02B54CD4C865C8A7A0C0";
    aarch64-darwin = "85CD8B14F4863DDC0966BDB66F38CC3EC41905F123EB7583DBFBB374FD96E765";
  };

  urlMap = {
    x86_64-linux = "https://github.com/nais/cli/releases/download/v3.11.0/nais-cli_linux_amd64.tgz";
    aarch64-linux = "https://github.com/nais/cli/releases/download/v3.11.0/nais-cli_linux_arm64.tgz";
    x86_64-darwin = "https://github.com/nais/cli/releases/download/v3.11.0/nais-cli_darwin_amd64.tgz";
    aarch64-darwin = "https://github.com/nais/cli/releases/download/v3.11.0/nais-cli_darwin_arm64.tgz";
  };
in
  stdenvNoCC.mkDerivation {
    pname = "nais-cli";
    version = "v3.11.0";
    src = fetchurl {
      url = urlMap.${system};
      sha256 = shaMap.${system};
    };

    sourceRoot = ".";

    nativeBuildInputs = [installShellFiles];

    installPhase = ''
      mkdir -p $out/bin
      cp -vr ./nais $out/bin/nais
    '';
    postInstall = ''
      installShellCompletion ./completions/*
    '';

    system = system;

    meta = {
      sourceProvenance = [lib.sourceTypes.binaryNativeCode];

      platforms = [
        "aarch64-darwin"
        "aarch64-linux"
        "x86_64-darwin"
        "x86_64-linux"
      ];
    };
  }
