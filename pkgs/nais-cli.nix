# This file was generated by nais/cli. DO NOT EDIT.
# vim: set ft=nix ts=2 sw=2 sts=2 et sta
{
  system ? builtins.currentSystem,
  lib,
  fetchurl,
  installShellFiles,
  stdenvNoCC,
}: let
  shaMap = {
    x86_64-linux = "EC6C74E5253198C10AA24C2F77402B74F05261A8DC6EE85391E3FDE30B711A76";
    aarch64-linux = "CA2C10C8BBA823526A2252D92C34F78BBCCCA9A3EA2A2A3B94DE4A2F7E634510";
    x86_64-darwin = "792902917CF13920F49F22FBB45CDA49F9D6510E712A829DB383CDF2A81FE125";
    aarch64-darwin = "B4CC176929D24F50919C95E6850FF0AFCA3FDB9DD3BA244F90782D8A8AE60022";
  };

  urlMap = {
    x86_64-linux = "https://github.com/nais/cli/releases/download/v3.3.1/nais-cli_linux_amd64.tgz";
    aarch64-linux = "https://github.com/nais/cli/releases/download/v3.3.1/nais-cli_linux_arm64.tgz";
    x86_64-darwin = "https://github.com/nais/cli/releases/download/v3.3.1/nais-cli_darwin_amd64.tgz";
    aarch64-darwin = "https://github.com/nais/cli/releases/download/v3.3.1/nais-cli_darwin_arm64.tgz";
  };
in
  stdenvNoCC.mkDerivation {
    pname = "nais-cli";
    version = "v3.3.1";
    src = fetchurl {
      url = urlMap.${system};
      sha256 = shaMap.${system};
    };

    sourceRoot = ".";

    nativeBuildInputs = [installShellFiles];

    installPhase = ''
      mkdir -p $out/bin
      cp -vr ./nais $out/bin/nais
    '';
    postInstall = ''
      installShellCompletion ./completions/*
    '';

    system = system;

    meta = {
      sourceProvenance = [lib.sourceTypes.binaryNativeCode];

      platforms = [
        "aarch64-darwin"
        "aarch64-linux"
        "x86_64-darwin"
        "x86_64-linux"
      ];
    };
  }
