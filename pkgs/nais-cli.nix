# This file was generated by nais/cli. DO NOT EDIT.
# vim: set ft=nix ts=2 sw=2 sts=2 et sta
{
  system ? builtins.currentSystem,
  lib,
  fetchurl,
  installShellFiles,
  stdenvNoCC,
}: let
  shaMap = {
    x86_64-linux = "B1C977EAF9483D2CACAD0F2ABD9456BC3541357D5A6FF842B5781E61FA64F23B";
    aarch64-linux = "31D6E53C14F6AB071C51E6DB7C69E2CAEB8CBDB313D9EB1567A08DE37D34F338";
    x86_64-darwin = "C696A4F5A90ACFAE3A00A37CF4D74A589F2E47E25E133F38FA81DD67296F66D9";
    aarch64-darwin = "8A1765ECE2688B745AAB6941B3E29AE61D9101241D6DD13BF6F20A32779AE17F";
  };

  urlMap = {
    x86_64-linux = "https://github.com/nais/cli/releases/download/v3.10.1/nais-cli_linux_amd64.tgz";
    aarch64-linux = "https://github.com/nais/cli/releases/download/v3.10.1/nais-cli_linux_arm64.tgz";
    x86_64-darwin = "https://github.com/nais/cli/releases/download/v3.10.1/nais-cli_darwin_amd64.tgz";
    aarch64-darwin = "https://github.com/nais/cli/releases/download/v3.10.1/nais-cli_darwin_arm64.tgz";
  };
in
  stdenvNoCC.mkDerivation {
    pname = "nais-cli";
    version = "v3.10.1";
    src = fetchurl {
      url = urlMap.${system};
      sha256 = shaMap.${system};
    };

    sourceRoot = ".";

    nativeBuildInputs = [installShellFiles];

    installPhase = ''
      mkdir -p $out/bin
      cp -vr ./nais $out/bin/nais
    '';
    postInstall = ''
      installShellCompletion ./completions/*
    '';

    system = system;

    meta = {
      sourceProvenance = [lib.sourceTypes.binaryNativeCode];

      platforms = [
        "aarch64-darwin"
        "aarch64-linux"
        "x86_64-darwin"
        "x86_64-linux"
      ];
    };
  }
